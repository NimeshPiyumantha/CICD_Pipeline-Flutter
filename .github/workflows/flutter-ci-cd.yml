name: Flutter CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-android:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.0'

    - name: Install dependencies
      run: flutter pub get

    - name: Run tests
      run: flutter test

    - name: Build Android APK
      run: flutter build apk --release

    - name: Extract Version from pubspec.yaml
      id: extract_version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"')
        echo "Extracted version: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Upload Android APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-release-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    runs-on: macos-latest

    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.0'

    - name: Install dependencies
      run: flutter pub get

    - name: Run tests
      run: flutter test

    - name: Install CocoaPods dependencies
      run: |
        cd ios
        pod install

    - name: Build iOS IPA
      run: flutter build ipa --release --no-codesign

    - name: Locate IPA file
      id: find_ipa
      run: |
        IPA_PATH=$(find build/ios/ipa -name "*.ipa" | head -n 1)
        if [ -z "$IPA_PATH" ]; then
          echo "IPA file not found. Check build settings."
          exit 1
        fi
        echo "IPA found at: $IPA_PATH"
        echo "ipa_path=$IPA_PATH" >> $GITHUB_ENV

    - name: Upload iOS IPA as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-release-ipa
        path: ${{ env.ipa_path }}

  create-release:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Android APK
      uses: actions/download-artifact@v4
      with:
        name: android-release-apk
        path: build/app/outputs/flutter-apk/

    - name: Download iOS IPA
      uses: actions/download-artifact@v4
      with:
        name: ios-release-ipa
        path: build/ios/ipa/

    - name: Extract Version from pubspec.yaml
      id: extract_version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"')
        echo "Extracted version: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_PAT }}
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        release_name: Release v${{ steps.extract_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Android APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload iOS IPA to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/ios/ipa/*.ipa
        asset_name: app-release.ipa
        asset_content_type: application/octet-stream